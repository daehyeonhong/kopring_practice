name: CI/CD

on:
  push:
    branches: [ master ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: gradle caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: copy wallet file and yml files
        run: |
          aws s3 sync s3://aws-server-build/ ./src/main/resources --exclude "*" --include "application*.yml"
          aws s3 cp s3://aws-server-build/${{ secrets.DEV_OCI_WALLET }}.zip .

      - name: unzip wallet files
        run: unzip ${{ secrets.DEV_OCI_WALLET }}.zip

      - name: Set up Redis
        run: echo "spring.redis.host=redis" >> $GITHUB_ENV

      - name: build project
        run: ./gradlew clean build -i
        env:
          SPRING_PROFILES_ACTIVE: build

      - name: create deploy zip
        run: |
          mkdir -p deploy/wallet
          cp ./docker/docker-compose.*.yml ./deploy/
          cp ./appspec.yml ./deploy/
          cp ./docker/Dockerfile ./deploy/
          cp ./scripts/*.sh ./deploy/
          cp ./build/libs/*.jar ./deploy/
          cp -r ./${{ secrets.DEV_OCI_WALLET }}/* ./deploy/wallet/
          zip -r -qq ./spring-build.zip ./deploy

      - name: upload project to s3
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          ./spring-build.zip s3://aws-server-build

      - name: create deploy group
        run: aws deploy create-deployment --application-name dev-aws-code_deploy
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name dev-aws-deploy
          --s3-location bucket=aws-server-build,bundleType=zip,key=spring-build.zip
